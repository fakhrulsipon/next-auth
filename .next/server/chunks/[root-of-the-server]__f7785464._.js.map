{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 74, "column": 0}, "map": {"version":3,"sources":["file:///C:/projects/learn_nextjs/nestjs_app/src/lib/mongodb.js"],"sourcesContent":["import { MongoClient } from \"mongodb\";\r\n\r\nconst uri = process.env.MONGODB_URI;\r\nif (!uri) throw new Error(\"❌ MONGODB_URI missing in .env.local\");\r\n\r\nlet client;\r\nlet clientPromise;\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n  // dev: global cache করে রাখি যাতে HMR-এ বারবার নতুন কানেকশন না হয়\r\n  if (!global._mongoClientPromise) {\r\n    client = new MongoClient(uri);\r\n    global._mongoClientPromise = client.connect();\r\n  }\r\n  clientPromise = global._mongoClientPromise;\r\n} else {\r\n  // prod: একবার কানেক্ট করে নিই\r\n  client = new MongoClient(uri);\r\n  clientPromise = client.connect();\r\n}\r\n\r\nexport default clientPromise;\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,MAAM,QAAQ,GAAG,CAAC,WAAW;AACnC,IAAI,CAAC,KAAK,MAAM,IAAI,MAAM;AAE1B,IAAI;AACJ,IAAI;AAEJ,wCAA4C;IAC1C,kEAAkE;IAClE,IAAI,CAAC,4CAAO,mBAAmB,EAAE;QAC/B,SAAS,IAAI,uGAAA,CAAA,cAAW,CAAC;QACzB,4CAAO,mBAAmB,GAAG,OAAO,OAAO;IAC7C;IACA,gBAAgB,4CAAO,mBAAmB;AAC5C;;uCAMe","debugId":null}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":["file:///C:/projects/learn_nextjs/nestjs_app/src/app/api/products/route.js"],"sourcesContent":["// app/api/products/route.js\r\nimport { NextResponse } from \"next/server\";\r\nimport clientPromise from \"@/lib/mongodb\"; // যদি @ alias না থাকে, \"../lib/mongodb\" লিখো\r\n// import clientPromise from \"../../../lib/mongodb\"; // <-- alias না থাকলে এই লাইন ব্যবহার করো\r\n\r\nexport const runtime = \"nodejs\"; // নিশ্চিত করি Node.js runtime\r\n\r\nexport async function POST(request) {\r\n  try {\r\n    const body = await request.json();\r\n\r\n    const { name, price, description, category, stock, image } = body || {};\r\n    // Basic validation\r\n    if (!name || !price || !description || !category || !stock) {\r\n      return NextResponse.json(\r\n        { ok: false, message: \"Missing required fields\" },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    const client = await clientPromise;\r\n    const db = client.db(process.env.MONGODB_DB); // .env.local এ যেটা দিয়েছো\r\n\r\n    const doc = {\r\n      name: String(name).trim(),\r\n      price: Number(price),\r\n      description: String(description).trim(),\r\n      category: String(category).trim(),\r\n      stock: Number(stock),\r\n      image: image ? String(image).trim() : \"\",\r\n      createdAt: new Date(),\r\n      updatedAt: new Date(),\r\n    };\r\n\r\n    const result = await db.collection(\"products\").insertOne(doc);\r\n\r\n    return NextResponse.json(\r\n      { ok: true, id: result.insertedId, message: \"Product added\" },\r\n      { status: 201 }\r\n    );\r\n  } catch (err) {\r\n    console.error(\"POST /api/products error:\", err);\r\n    return NextResponse.json(\r\n      { ok: false, message: \"Server error\" },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n// (ঐচ্ছিক) পরে লিস্ট দেখাতে কাজে লাগবে\r\nexport async function GET() {\r\n  try {\r\n    const client = await clientPromise;\r\n    const db = client.db(process.env.MONGODB_DB);\r\n    const products = await db\r\n      .collection(\"products\")\r\n      .find({})\r\n      .sort({ createdAt: -1 })\r\n      .toArray();\r\n\r\n    return NextResponse.json({ ok: true, products }, { status: 200 });\r\n  } catch (err) {\r\n    console.error(\"GET /api/products error:\", err);\r\n    return NextResponse.json(\r\n      { ok: false, message: \"Server error\" },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n\r\n"],"names":[],"mappings":"AAAA,4BAA4B;;;;;;AAC5B;AACA,gNAA2C,6CAA6C;;;AAGjF,MAAM,UAAU,UAAU,8BAA8B;AAExD,eAAe,KAAK,OAAO;IAChC,IAAI;QACF,MAAM,OAAO,MAAM,QAAQ,IAAI;QAE/B,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,WAAW,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,QAAQ,CAAC;QACtE,mBAAmB;QACnB,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,eAAe,CAAC,YAAY,CAAC,OAAO;YAC1D,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,IAAI;gBAAO,SAAS;YAA0B,GAChD;gBAAE,QAAQ;YAAI;QAElB;QAEA,MAAM,SAAS,MAAM,uHAAA,CAAA,UAAa;QAClC,MAAM,KAAK,OAAO,EAAE,CAAC,QAAQ,GAAG,CAAC,UAAU,GAAG,2BAA2B;QAEzE,MAAM,MAAM;YACV,MAAM,OAAO,MAAM,IAAI;YACvB,OAAO,OAAO;YACd,aAAa,OAAO,aAAa,IAAI;YACrC,UAAU,OAAO,UAAU,IAAI;YAC/B,OAAO,OAAO;YACd,OAAO,QAAQ,OAAO,OAAO,IAAI,KAAK;YACtC,WAAW,IAAI;YACf,WAAW,IAAI;QACjB;QAEA,MAAM,SAAS,MAAM,GAAG,UAAU,CAAC,YAAY,SAAS,CAAC;QAEzD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,IAAI;YAAM,IAAI,OAAO,UAAU;YAAE,SAAS;QAAgB,GAC5D;YAAE,QAAQ;QAAI;IAElB,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,6BAA6B;QAC3C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,IAAI;YAAO,SAAS;QAAe,GACrC;YAAE,QAAQ;QAAI;IAElB;AACF;AAGO,eAAe;IACpB,IAAI;QACF,MAAM,SAAS,MAAM,uHAAA,CAAA,UAAa;QAClC,MAAM,KAAK,OAAO,EAAE,CAAC,QAAQ,GAAG,CAAC,UAAU;QAC3C,MAAM,WAAW,MAAM,GACpB,UAAU,CAAC,YACX,IAAI,CAAC,CAAC,GACN,IAAI,CAAC;YAAE,WAAW,CAAC;QAAE,GACrB,OAAO;QAEV,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,IAAI;YAAM;QAAS,GAAG;YAAE,QAAQ;QAAI;IACjE,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,4BAA4B;QAC1C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,IAAI;YAAO,SAAS;QAAe,GACrC;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}